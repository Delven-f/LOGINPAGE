<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DelvineX - Login</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Pixel font -->
    <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
    <style>
        body {
            min-height: 100vh;
            overflow-x: hidden;
            background: linear-gradient(120deg, #ff4e50, #f9d423, #1e90ff, #43e97b 80%, #38f9d7 100%);
            background-size: 400% 400%;
            animation: rainbowBG 3s ease infinite;
            font-family: 'Press Start 2P', cursive !important;
        }
        @keyframes rainbowBG {
            0% {background-position:0% 50%}
            50% {background-position:100% 50%}
            100% {background-position:0% 50%}
        }
        .glass-card {
            background: rgba(255,255,255,0.7);
            box-shadow: 0 0 0 8px #ff80ab, 8px 8px 0 0 #8f00ff;
            border-radius: 24px;
            border: 4px solid #00e6e6;
            padding: 32px 20px 20px 20px !important;
            transition: box-shadow 0.3s;
        }
        .glass-card:hover {
            box-shadow: 0 0 10px 8px #ffe53b, 8px 8px 0 0 #ff2525;
        }
        .neutral-accent, .neutral-accent-2 {
            background: linear-gradient(90deg,#fcb045,#fd1d1d,#833ab4,#43e97b,#38f9d7);
            color: #fff;
            border: 2px solid #fff !important;
            border-radius: 12px !important;
            box-shadow: 4px 4px 0 0 #fd1d1d;
        }
        .neutral-border {
            border-color: #833ab4 !important;
            border-width: 2px !important;
        }
        .neutral-text {
            color: #fff !important;
            text-shadow: 2px 2px 0 #000;
        }
        .neutral-placeholder {
            color: #ffe53b !important;
        }
        .card-container {
            position: relative;
            z-index: 2;
        }
        label, input, button, a, h1, p {
            font-family: 'Press Start 2P', cursive !important;
        }
        input {
            border-radius: 12px !important;
            border: 2px solid #833ab4 !important;
            box-shadow: 2px 2px 0 #38f9d7 !important;
            font-size: 10px !important;
            background: #fffb !important;
            color: #111 !important;
        }
        input:focus {
            outline: none;
            border-color: #ff4e50 !important;
            background: #f9d423 !important;
        }
        button {
            border-radius: 12px !important;
            box-shadow: 2px 2px 0 #00e6e6 !important;
            border: 2px solid #833ab4 !important;
            font-size: 10px !important;
            padding: 10px 20px !important;
            background: linear-gradient(90deg, #ff4e50, #f9d423, #1e90ff, #43e97b, #38f9d7);
            background-size: 400% 400%;
            color: #fff !important;
            transition: background-position 0.5s;
        }
        button:hover {
            background-position: 100% 0;
            box-shadow: 0 0 10px 2px #f9d423;
        }
        .text-lg {
            font-size: 18px !important;
            letter-spacing: 1px;
        }
        .rounded-full, .rounded-lg, .border-2, .shadow-xl {
            border-radius: 12px !important;
            box-shadow: none !important;
        }
        @media (max-width: 600px) {
            html, body { font-size: 10px; }
            .glass-card { padding: 15px 5px 10px 5px !important; }
        }
    </style>
</head>
<body class="flex flex-col items-center justify-center min-h-screen" style="background: none !important;">
    <div class="flex items-center justify-center min-h-screen w-full px-2 card-container">
        <div class="glass-card max-w-md w-full">
            <div class="flex flex-col items-center mb-4">
                <!-- LOGO DIHILANGKAN SESUAI PERMINTAAN -->
                <h1 class="text-lg font-extrabold neutral-text tracking-wide drop-shadow mb-1">GTPS SERVER</h1>
                <p class="text-sm neutral-text font-medium tracking-wide opacity-80 text-center">Welcome back! login to your account</p>
            </div>
            <div id="errorDiv" class="hidden bg-red-400 text-white p-2 my-3 rounded-lg text-center shadow-md text-sm font-medium transition-all duration-200">
                <span id="errorMessage"></span>
            </div>
            <form 
                method="post"
                action="/player/growid/login/validate"
                accept-charset="UTF-8"
                id="loginForm">
                <div class="mb-2">
                    <label for="loginGrowId" class="block neutral-text text-sm font-semibold mb-1">GrowID</label>
                    <div class="flex items-center border neutral-border rounded-lg neutral-accent px-3 py-2 focus-within:border-gray-400 shadow-sm">
                        <i class="fas fa-user text-gray-200 mr-2 text-sm"></i>
                        <input type="text" name="growId" id="loginGrowId" 
                               class="w-full bg-transparent neutral-text text-sm font-medium neutral-placeholder focus:outline-none"
                               placeholder="Enter your GrowID" autocomplete="username">
                    </div>
                </div>
                <div class="mb-3">
                    <label for="loginPassword" class="block neutral-text text-sm font-semibold mb-1">Password</label>
                    <div class="flex items-center border neutral-border rounded-lg neutral-accent px-3 py-2 focus-within:border-gray-400 shadow-sm">
                        <i class="fas fa-lock text-gray-200 mr-2 text-sm"></i>
                        <input type="password" name="password" id="loginPassword" 
                               class="w-full bg-transparent neutral-text text-sm font-medium neutral-placeholder focus:outline-none"
                               placeholder="Enter your password" autocomplete="current-password">
                        <button type="button" id="toggleLogPassword" class="text-white ml-2 focus:outline-none text-sm" tabindex="-1">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="flex justify-between items-center mt-3">
                    <button id="loginButton" 
                            class="px-5 py-2 rounded bg-gradient-to-r from-pink-500 via-yellow-400 to-blue-400 text-white text-sm hover:bg-gradient-to-l transition duration-300 ease-in-out transform hover:scale-105">
                        Login
                    </button>
                    <a href="/register">
                        <button id="registerButton" 
                                class="px-5 py-2 rounded bg-gradient-to-r from-green-400 via-blue-400 to-pink-400 text-white text-sm hover:bg-gradient-to-l transition duration-300 ease-in-out transform hover:scale-105">
                            Register
                        </button>
                    </a>
                </div>
            </form>
        </div>
    </div>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        if (localStorage.getItem('growId')) {
            document.getElementById('loginGrowId').value = localStorage.getItem('growId');
        }
    });
    document.getElementById('loginButton').addEventListener('click', function (event) {
        event.preventDefault();
        const loginForm = document.getElementById('loginForm');
        const uName = document.getElementById('loginGrowId').value;
        const uPass = document.getElementById('loginPassword').value;
        if (!uName || !uPass) {
            document.getElementById('errorDiv').classList.remove('hidden');
            document.getElementById('errorMessage').innerHTML = 'Username or Password is empty';
            return;
        } else if (uName.length < 3 || uPass.length < 3) {
            document.getElementById('errorDiv').classList.remove('hidden');
            document.getElementById('errorMessage').innerHTML = 'Username or Password must be at least 3 characters long';
            return;
        } else {
            loginForm.submit();
            localStorage.setItem('growId', uName);
        }
    });
    document.getElementById('toggleLogPassword').addEventListener('click', function () {
        const LpasswordField = document.getElementById('loginPassword');
        const LpasswordFieldType = LpasswordField.getAttribute('type');
        if (LpasswordFieldType === 'password') {
            LpasswordField.setAttribute('type', 'text');
            this.innerHTML = '<i class="fas fa-eye-slash"></i>';
        } else {
            LpasswordField.setAttribute('type', 'password');
            this.innerHTML = '<i class="fas fa-eye"></i>';
        }
    });
    </script>
</body>
</html>
